
AM GENERATION 

INPUT :
fm=3;
fc=20;
fs=100;
t=0:1/fs:3;
p=length(t);

am=input("Enter the message signal amplitude=");
ac=input("Enter the carrier signal amplitude(ac>am)=");


//message signal generation
msg=am*cos(2*%pi*fm*t);
figure(1);
subplot(3,1,1);
plot(t,msg);
xlabel("Time");
ylabel("Amplitude");
title("Message Signal");

//Carrier signal generation
carrier=ac*cos(2*%pi*fc*t);
subplot(3, 1, 2);
plot(t,carrier);
xlabel("Time");
ylabel("Amplitude");
title("Carrier Signal");
ka=1/ac; //amplitude sensitivity
u=ka*am;
disp(u,"The Modulation Index is")



//amplitude modulation generation
am_mod=(1+ka.*msg).*carrier;
subplot(3, 1, 3);
plot(t,am_mod);
xlabel("Time");
ylabel("Amplitude");
title("Amplitude Modulated Signal");


// Frqeuncy Spectrum

d=(- p /2:1: p/2 -1) *1/3; // Indexing
figure (2);
subplot (3 ,1 ,1);
plot(d, abs( fftshift( fft( am_mod ))));// FOURIER

//TRANSFORM OF MODULATED SIGNAL
xlabel( "FREQUENCY " );
ylabel( "AMPLITUDE " );
title( "AM Signal Spectrum " );



// AM Demodulation (Envelope Detection)

demod = am_mod .* carrier;  // Multiply by carrier for coherent detection

k = abs(fft(demod));  // Take FFT of demodulated signal


// Create a low-pass filter (rectangular window in frequency domain)

cutoff = 4*fm;  // Cutoff frequency (adjust as needed)

filt = [ones(1, cutoff), zeros(1, p - cutoff)];  // Simple rectangular filter


// Apply filter in frequency domain

out = k .* filt;

// Convert back to time domain and normalize
demodulated_msg = real(ifft(out));  // Take real part to remove any residual imaginary components

demodulated_msg = demodulated_msg - mean(demodulated_msg);  // Remove DC offset
demodulated_msg = demodulated_msg * 2;  // Amplitude scaling



// Plot demodulated signal
subplot(3, 1, 3);
plot(t(1:length(demodulated_msg)), demodulated_msg);
xlabel("Time (s)");
ylabel("Amplitude");
title("Demodulated Message");



